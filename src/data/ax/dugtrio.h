static const axmain sAxMainDugtrio;
const SiroArchive gAxDugtrio = {"SIRO", &sAxMainDugtrio};

static const ax_pose sDugtrioPose1[] = {
	AX_POSE(0, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(2, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(234, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose2[] = {
	AX_POSE(3, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(237, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(233, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(6, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose3[] = {
	AX_POSE(4, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(7, OAM1(243, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(8, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(236, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(231, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(243, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(237, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(232, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(227, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(10, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose4[] = {
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(229, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(2, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(234, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose5[] = {
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(227, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(250, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(239, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(234, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose6[] = {
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(231, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(226, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(7, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(228, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(8, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(243, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(243, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(233, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose7[] = {
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(4, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose8[] = {
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(230, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(6, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose9[] = {
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(7, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(228, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(10, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose10[] = {
	AX_POSE(0, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose11[] = {
	AX_POSE(5, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(2, ST_OAM_H_RECTANGLE, 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(240, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose12[] = {
	AX_POSE(8, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(5, ST_OAM_H_RECTANGLE, 2), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(6, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(4, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(4, ST_OAM_H_RECTANGLE, 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(231, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose13[] = {
	AX_POSE(0, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose14[] = {
	AX_POSE(5, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(6, ST_OAM_H_RECTANGLE, 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(4, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose15[] = {
	AX_POSE(8, OAM1(12, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(8, ST_OAM_H_RECTANGLE, 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(6, OAM1(2, ST_OAM_H_RECTANGLE, 2), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(4, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(2, ST_OAM_H_RECTANGLE, 2), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose16[] = {
	AX_POSE(0, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(4, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose17[] = {
	AX_POSE(5, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(4, ST_OAM_H_RECTANGLE, 2), OAM2(1, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(1, 3, 4)),
	AX_POSE(4, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(240, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose18[] = {
	AX_POSE(8, OAM1(10, ST_OAM_SQUARE     , 2), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(6, ST_OAM_H_RECTANGLE, 2), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(1, 3, 4)),
	AX_POSE(6, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(244, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(4, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(231, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose19[] = {
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(2, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose20[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(2, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(6, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose21[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(7, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(8, 3, 4)),
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(10, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose22[] = {
	AX_POSE(0, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(247, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(2, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(237, ST_OAM_H_RECTANGLE, 1), OAM2(1, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(239, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(5, 3, 4)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose23[] = {
	AX_POSE(3, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(1, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(237, ST_OAM_H_RECTANGLE, 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(6, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(243, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(6, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose24[] = {
	AX_POSE(4, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(7, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(2, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(8, 3, 4)),
	AX_POSE(8, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(236, ST_OAM_H_RECTANGLE, 1), OAM2(4, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(231, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(10, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(231, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(237, ST_OAM_H_RECTANGLE, 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(8, 3, 4)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(10, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose25[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(235, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(231, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose26[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(239, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(234, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose27[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(238, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(233, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose28[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose29[] = {
	AX_POSE(11, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose30[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose31[] = {
	AX_POSE(11, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(12, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(6, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose32[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose33[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose34[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose35[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose36[] = {
	AX_POSE(14, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose37[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose38[] = {
	AX_POSE(14, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose39[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(226, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose40[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(223, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose41[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(228, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(221, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose42[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose43[] = {
	AX_POSE(17, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose44[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose45[] = {
	AX_POSE(17, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose46[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(4, ST_OAM_H_RECTANGLE, 2), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose47[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(3, OAM1(7, ST_OAM_H_RECTANGLE, 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(4, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose48[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(13, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(7, OAM1(9, ST_OAM_H_RECTANGLE, 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(6, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(231, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(23, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose49[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose50[] = {
	AX_POSE(20, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose51[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose52[] = {
	AX_POSE(20, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose53[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(8, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose54[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(16, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(3, OAM1(11, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(4, OAM1(5, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose55[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(17, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(7, OAM1(13, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(6, OAM1(7, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(4, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(23, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose56[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose57[] = {
	AX_POSE(23, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose58[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose59[] = {
	AX_POSE(23, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(235, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(231, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose60[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(4, ST_OAM_H_RECTANGLE, 2), OAM2(4, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(245, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose61[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(3, OAM1(7, ST_OAM_H_RECTANGLE, 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(4, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose62[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(13, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(7, OAM1(9, ST_OAM_H_RECTANGLE, 2), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(6, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(249, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(23, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose63[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose64[] = {
	AX_POSE(26, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose65[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose66[] = {
	AX_POSE(26, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose67[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose68[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(2, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(1, ST_OAM_SIZE_1, FLIP(1, 0), 0, 1), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose69[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(3, ST_OAM_SIZE_1, FLIP(1, 0), 0, 1), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(27, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose70[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose71[] = {
	AX_POSE(29, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose72[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose73[] = {
	AX_POSE(29, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(226, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose74[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose75[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose76[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose77[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose78[] = {
	AX_POSE(32, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose79[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose80[] = {
	AX_POSE(32, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose81[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(235, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(231, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose82[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(239, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(234, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose83[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(244, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(238, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(233, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose84[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose85[] = {
	AX_POSE(11, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose86[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose87[] = {
	AX_POSE(11, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(12, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(6, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose88[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose89[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose90[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose91[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose92[] = {
	AX_POSE(14, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose93[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose94[] = {
	AX_POSE(14, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose95[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(226, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose96[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(223, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose97[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(228, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(221, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose98[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose99[] = {
	AX_POSE(17, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose100[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose101[] = {
	AX_POSE(17, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose102[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(4, ST_OAM_H_RECTANGLE, 2), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose103[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(3, OAM1(7, ST_OAM_H_RECTANGLE, 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(4, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose104[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(13, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(7, OAM1(9, ST_OAM_H_RECTANGLE, 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(6, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(231, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(238, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(23, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose105[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose106[] = {
	AX_POSE(20, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose107[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose108[] = {
	AX_POSE(20, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose109[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(8, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose110[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(16, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(3, OAM1(11, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(4, OAM1(5, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose111[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(17, ST_OAM_SQUARE     , 2), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(7, OAM1(13, ST_OAM_H_RECTANGLE, 2), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(6, OAM1(7, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(4, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(23, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose112[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose113[] = {
	AX_POSE(23, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose114[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose115[] = {
	AX_POSE(23, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(235, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(231, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose116[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(4, ST_OAM_H_RECTANGLE, 2), OAM2(4, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(245, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose117[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(3, OAM1(7, ST_OAM_H_RECTANGLE, 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(4, OAM1(1, ST_OAM_H_RECTANGLE, 2), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose118[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(13, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(7, OAM1(9, ST_OAM_H_RECTANGLE, 2), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(17, 3, 4)),
	AX_POSE(6, OAM1(3, ST_OAM_H_RECTANGLE, 2), OAM2(249, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(23, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose119[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose120[] = {
	AX_POSE(26, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose121[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose122[] = {
	AX_POSE(26, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose123[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose124[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(2, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(1, ST_OAM_SIZE_1, FLIP(1, 0), 0, 1), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose125[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(3, ST_OAM_SIZE_1, FLIP(1, 0), 0, 1), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(27, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose126[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose127[] = {
	AX_POSE(29, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose128[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose129[] = {
	AX_POSE(29, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(226, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose130[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(2, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(21, 3, 4)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose131[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(4, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(18, 3, 4)),
	AX_POSE(-1, OAM1(242, ST_OAM_H_RECTANGLE, 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(16, 3, 4)),
	AX_POSE(5, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(22, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose132[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(6, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_1, FLIP(1, 0), 0, 0), OAM3(20, 3, 4)),
	AX_POSE(7, OAM1(241, ST_OAM_H_RECTANGLE, 1), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(24, 3, 4)),
	AX_POSE(8, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 0, 1), OAM3(26, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose133[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose134[] = {
	AX_POSE(32, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose135[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose136[] = {
	AX_POSE(32, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE(2, OAM1(0, ST_OAM_H_RECTANGLE, 2), OAM2(236, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(17, 3, 4)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(19, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(16, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose137[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose138[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose139[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose140[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose141[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose142[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose143[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose144[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose145[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose146[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose147[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose148[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose149[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose150[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose151[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose152[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose153[] = {
	AX_POSE(33, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose154[] = {
	AX_POSE(34, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose155[] = {
	AX_POSE(35, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose156[] = {
	AX_POSE(36, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose157[] = {
	AX_POSE(37, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose158[] = {
	AX_POSE(38, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(1, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose159[] = {
	AX_POSE(39, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose160[] = {
	AX_POSE(38, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose161[] = {
	AX_POSE(37, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose162[] = {
	AX_POSE(36, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose163[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose164[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose165[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose166[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose167[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose168[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose169[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose170[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose171[] = {
	AX_POSE(40, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose172[] = {
	AX_POSE(41, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose173[] = {
	AX_POSE(42, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose174[] = {
	AX_POSE(43, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose175[] = {
	AX_POSE(44, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose176[] = {
	AX_POSE(45, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose177[] = {
	AX_POSE(46, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose178[] = {
	AX_POSE(47, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose179[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose180[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose181[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose182[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose183[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose184[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose185[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose186[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose187[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose188[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose189[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose190[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose191[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose192[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose193[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose194[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose195[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose196[] = {
	AX_POSE(11, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose197[] = {
	AX_POSE(9, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose198[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose199[] = {
	AX_POSE(14, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose200[] = {
	AX_POSE(12, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose201[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose202[] = {
	AX_POSE(17, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose203[] = {
	AX_POSE(15, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose204[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose205[] = {
	AX_POSE(20, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose206[] = {
	AX_POSE(18, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose207[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose208[] = {
	AX_POSE(23, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose209[] = {
	AX_POSE(21, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose210[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose211[] = {
	AX_POSE(26, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose212[] = {
	AX_POSE(24, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose213[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose214[] = {
	AX_POSE(29, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose215[] = {
	AX_POSE(27, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose216[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose217[] = {
	AX_POSE(32, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose218[] = {
	AX_POSE(30, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose219[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose220[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose221[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose222[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose223[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose224[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose225[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose226[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose227[] = {
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose228[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose229[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose230[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose231[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose232[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose233[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose234[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose235[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose236[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose237[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose238[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose239[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose240[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose241[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose242[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose243[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose244[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose245[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose246[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose247[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose248[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose249[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose250[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose251[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose252[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose253[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose254[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose255[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose256[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose257[] = {
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose258[] = {
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose259[] = {
	AX_POSE(0, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose260[] = {
	AX_POSE(7, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose261[] = {
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose262[] = {
	AX_POSE(2, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose263[] = {
	AX_POSE(6, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose264[] = {
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose265[] = {
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose266[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose267[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose268[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose269[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose270[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose271[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose272[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose273[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose274[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose275[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose276[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose277[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose278[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose279[] = {
	AX_POSE(8, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose280[] = {
	AX_POSE(5, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose281[] = {
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose282[] = {
	AX_POSE(7, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose283[] = {
	AX_POSE(3, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose284[] = {
	AX_POSE(2, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose285[] = {
	AX_POSE(6, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose286[] = {
	AX_POSE(4, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose287[] = {
	AX_POSE(1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose288[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose289[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose290[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose291[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose292[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose293[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose294[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose295[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose296[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose297[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose298[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose299[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose300[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose301[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose302[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose303[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose304[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose305[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose306[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose307[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose308[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose309[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose310[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose311[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose312[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose313[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose314[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose315[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose316[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose317[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose318[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose319[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose320[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose321[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose322[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose323[] = {
	AX_POSE(8, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose324[] = {
	AX_POSE(5, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose325[] = {
	AX_POSE(0, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose326[] = {
	AX_POSE(7, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose327[] = {
	AX_POSE(3, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose328[] = {
	AX_POSE(2, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose329[] = {
	AX_POSE(3, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose330[] = {
	AX_POSE(2, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(4, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose331[] = {
	AX_POSE(6, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose332[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose333[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose334[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose335[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose336[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose337[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose338[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose339[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose340[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose341[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose342[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose343[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose344[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose345[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose346[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose347[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose348[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose349[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose350[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose351[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose352[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose353[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose354[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose355[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose356[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose357[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose358[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose359[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose360[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose361[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose362[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose363[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose364[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose365[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose366[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose367[] = {
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose368[] = {
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose369[] = {
	AX_POSE(0, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose370[] = {
	AX_POSE(7, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose371[] = {
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose372[] = {
	AX_POSE(2, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose373[] = {
	AX_POSE(6, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose374[] = {
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose375[] = {
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose376[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose377[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose378[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose379[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose380[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose381[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose382[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose383[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose384[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose385[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose386[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose387[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose388[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose389[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose390[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose391[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose392[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose393[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose394[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose395[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose396[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose397[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose398[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose399[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose400[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose401[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose402[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose403[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose404[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose405[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose406[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose407[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose408[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose409[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose410[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose411[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose412[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose413[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(8, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose414[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(5, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose415[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(0, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose416[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(7, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose417[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(3, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose418[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(2, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose419[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(6, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(4, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose420[] = {
	AX_POSE(48, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(4, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose421[] = {
	AX_POSE(48, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(250, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(7, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose422[] = {
	AX_POSE(48, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(11, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose423[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(14, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(8, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(243, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(235, ST_OAM_SQUARE     , 1), OAM2(242, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose424[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(15, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(11, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(6, ST_OAM_SQUARE     , 2), OAM2(241, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(226, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(20, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(1, ST_OAM_SQUARE     , 2), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(239, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(253, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose425[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(237, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(234, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(6, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose426[] = {
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(231, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(239, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(235, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(26, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(8, ST_OAM_SQUARE     , 2), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(3, ST_OAM_SQUARE     , 2), OAM2(7, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(2, ST_OAM_SQUARE     , 2), OAM2(233, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(222, ST_OAM_SQUARE     , 1), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(242, ST_OAM_SQUARE     , 1), OAM2(12, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose427[] = {
	AX_POSE(48, OAM1(238, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(17, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(15, ST_OAM_SQUARE     , 2), OAM2(238, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(50, OAM1(223, ST_OAM_SQUARE     , 1), OAM2(233, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(29, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(8, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(5, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(232, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(220, ST_OAM_SQUARE     , 1), OAM2(229, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(243, ST_OAM_SQUARE     , 1), OAM2(15, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(223, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose428[] = {
	AX_POSE(48, OAM1(241, ST_OAM_SQUARE     , 1), OAM2(226, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(225, ST_OAM_SQUARE     , 1), OAM2(230, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(31, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(18, ST_OAM_SQUARE     , 2), OAM2(227, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(32, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(223, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(7, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(231, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(227, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(18, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(4, ST_OAM_SQUARE     , 2), OAM2(221, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose429[] = {
	AX_POSE(48, OAM1(244, ST_OAM_SQUARE     , 1), OAM2(224, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(236, ST_OAM_SQUARE     , 1), OAM2(24, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(228, ST_OAM_SQUARE     , 1), OAM2(228, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(234, ST_OAM_SQUARE     , 1), OAM2(221, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(49, OAM1(7, ST_OAM_SQUARE     , 2), OAM2(10, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(229, ST_OAM_SQUARE     , 1), OAM2(9, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(11, ST_OAM_SQUARE     , 2), OAM2(230, ST_OAM_SIZE_0, FLIP(1, 1), 2, 0), OAM3(2, 3, 6)),
	AX_POSE(-1, OAM1(219, ST_OAM_SQUARE     , 1), OAM2(225, ST_OAM_SIZE_0, FLIP(0, 1), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(21, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(3, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose430[] = {
	AX_POSE(50, OAM1(9, ST_OAM_SQUARE     , 2), OAM2(33, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(48, OAM1(237, ST_OAM_SQUARE     , 1), OAM2(218, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(230, ST_OAM_SQUARE     , 1), OAM2(13, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(1, 3, 6)),
	AX_POSE(-1, OAM1(221, ST_OAM_SQUARE     , 1), OAM2(222, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(23, ST_OAM_SIZE_0, FLIP(0, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(14, ST_OAM_SQUARE     , 2), OAM2(219, ST_OAM_SIZE_0, FLIP(0, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(0, ST_OAM_SQUARE     , 2), OAM2(24, ST_OAM_SIZE_0, FLIP(1, 0), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose431[] = {
	AX_POSE(48, OAM1(240, ST_OAM_SQUARE     , 1), OAM2(216, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(0, 3, 6)),
	AX_POSE(-1, OAM1(232, ST_OAM_SQUARE     , 1), OAM2(16, ST_OAM_SIZE_0, FLIP(0, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(50, OAM1(224, ST_OAM_SQUARE     , 1), OAM2(220, ST_OAM_SIZE_0, FLIP(1, 0), 2, 0), OAM3(1, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(2, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose432[] = {
	AX_POSE(50, OAM1(5, ST_OAM_SQUARE     , 2), OAM2(25, ST_OAM_SIZE_0, FLIP(1, 1), 2, 1), OAM3(0, 3, 6)),
	AX_POSE(10, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(1, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose433[] = {
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose434[] = {
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose435[] = {
	AX_POSE(0, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(3, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose436[] = {
	AX_POSE(7, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose437[] = {
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose438[] = {
	AX_POSE(2, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose439[] = {
	AX_POSE(6, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose440[] = {
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose441[] = {
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(235, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose442[] = {
	AX_POSE(13, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose443[] = {
	AX_POSE(8, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose444[] = {
	AX_POSE(5, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose445[] = {
	AX_POSE(0, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose446[] = {
	AX_POSE(7, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose447[] = {
	AX_POSE(3, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose448[] = {
	AX_POSE(2, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose449[] = {
	AX_POSE(6, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose450[] = {
	AX_POSE(4, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose451[] = {
	AX_POSE(1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose452[] = {
	AX_POSE(16, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose453[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose454[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose455[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose456[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose457[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose458[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose459[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose460[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose461[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose462[] = {
	AX_POSE(19, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose463[] = {
	AX_POSE(8, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose464[] = {
	AX_POSE(5, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose465[] = {
	AX_POSE(0, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(1, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_SQUARE     , 1), OAM2(248, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose466[] = {
	AX_POSE(7, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose467[] = {
	AX_POSE(3, OAM1(255, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose468[] = {
	AX_POSE(2, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(253, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose469[] = {
	AX_POSE(6, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose470[] = {
	AX_POSE(4, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose471[] = {
	AX_POSE(1, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(245, ST_OAM_H_RECTANGLE, 1), OAM2(236, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose472[] = {
	AX_POSE(22, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose473[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose474[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose475[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_SQUARE     , 1), OAM2(246, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(255, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose476[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose477[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(250, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose478[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(242, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose479[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose480[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose481[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(249, ST_OAM_H_RECTANGLE, 1), OAM2(234, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(243, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose482[] = {
	AX_POSE(25, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose483[] = {
	AX_POSE(8, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose484[] = {
	AX_POSE(5, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose485[] = {
	AX_POSE(0, OAM1(251, ST_OAM_SQUARE     , 1), OAM2(2, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_SQUARE     , 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(251, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose486[] = {
	AX_POSE(7, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose487[] = {
	AX_POSE(3, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose488[] = {
	AX_POSE(2, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(254, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(241, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(247, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose489[] = {
	AX_POSE(6, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose490[] = {
	AX_POSE(4, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose491[] = {
	AX_POSE(1, OAM1(251, ST_OAM_H_RECTANGLE, 1), OAM2(246, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(252, ST_OAM_H_RECTANGLE, 1), OAM2(233, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(239, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose492[] = {
	AX_POSE(28, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose493[] = {
	AX_POSE(8, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose494[] = {
	AX_POSE(5, OAM1(254, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose495[] = {
	AX_POSE(0, OAM1(253, ST_OAM_SQUARE     , 1), OAM2(249, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_SQUARE     , 1), OAM2(244, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_SQUARE     , 1), OAM2(0, ST_OAM_SIZE_0, FLIP(0, 0), 0, 1), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose496[] = {
	AX_POSE(7, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose497[] = {
	AX_POSE(3, OAM1(254, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(248, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose498[] = {
	AX_POSE(2, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(245, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(240, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(252, ST_OAM_SIZE_0, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose499[] = {
	AX_POSE(6, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose500[] = {
	AX_POSE(4, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose501[] = {
	AX_POSE(1, OAM1(253, ST_OAM_H_RECTANGLE, 1), OAM2(237, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(247, ST_OAM_H_RECTANGLE, 1), OAM2(232, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE(-1, OAM1(246, ST_OAM_H_RECTANGLE, 1), OAM2(244, ST_OAM_SIZE_1, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_pose sDugtrioPose502[] = {
	AX_POSE(31, OAM1(233, ST_OAM_SQUARE     , 1), OAM2(240, ST_OAM_SIZE_2, FLIP(0, 0), 0, 0), OAM3(0, 3, 4)),
	AX_POSE_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_1[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 0, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 1, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 2, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_2[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 3, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 4, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 5, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_3[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 6, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 7, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 8, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_4[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 9, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 10, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 11, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_5[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 12, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 13, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 14, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_6[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 15, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 16, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 17, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_7[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 18, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 19, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 20, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_1_8[] = {
	{ .frames = 8, .unkFlags = 0, .poseId = 21, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 22, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 23, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 28, .offset = {0, -2}, .shadow = {0, -2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 28, .offset = {0, -3}, .shadow = {0, -3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 25, .offset = {0, 9}, .shadow = {0, 9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 24, .offset = {0, 18}, .shadow = {0, 18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 25, .offset = {1, 18}, .shadow = {1, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 26, .offset = {0, 18}, .shadow = {0, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 24, .offset = {1, 18}, .shadow = {1, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 30, .offset = {0, 6}, .shadow = {0, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 30, .offset = {0, 3}, .shadow = {0, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 35, .offset = {-2, -2}, .shadow = {-2, -2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 35, .offset = {-3, -3}, .shadow = {-3, -3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 32, .offset = {9, 9}, .shadow = {9, 9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 31, .offset = {18, 18}, .shadow = {18, 18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 32, .offset = {17, 19}, .shadow = {17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 33, .offset = {18, 18}, .shadow = {18, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 33, .offset = {17, 19}, .shadow = {17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 37, .offset = {6, 6}, .shadow = {6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 37, .offset = {3, 3}, .shadow = {3, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 42, .offset = {-2, 0}, .shadow = {-2, 0} },
	{ .frames = 6, .unkFlags = 0, .poseId = 42, .offset = {-3, 0}, .shadow = {-3, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 40, .offset = {8, 0}, .shadow = {8, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 38, .offset = {18, 0}, .shadow = {18, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 39, .offset = {18, -1}, .shadow = {18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 40, .offset = {18, 0}, .shadow = {18, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 38, .offset = {18, -1}, .shadow = {18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 44, .offset = {6, 0}, .shadow = {6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 44, .offset = {3, 0}, .shadow = {3, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 49, .offset = {-2, 2}, .shadow = {-2, 2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 49, .offset = {-3, 3}, .shadow = {-3, 3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 47, .offset = {9, -9}, .shadow = {9, -9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 45, .offset = {18, -18}, .shadow = {18, -18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 46, .offset = {17, -19}, .shadow = {17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 47, .offset = {18, -18}, .shadow = {18, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 45, .offset = {17, -19}, .shadow = {17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 51, .offset = {6, -6}, .shadow = {6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 51, .offset = {3, -3}, .shadow = {3, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 56, .offset = {0, 2}, .shadow = {0, 2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 56, .offset = {0, 3}, .shadow = {0, 3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 54, .offset = {0, -10}, .shadow = {0, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 52, .offset = {0, -18}, .shadow = {0, -18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 53, .offset = {1, -18}, .shadow = {1, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 54, .offset = {0, -18}, .shadow = {0, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 52, .offset = {1, -18}, .shadow = {1, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 58, .offset = {0, -6}, .shadow = {0, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 58, .offset = {0, -3}, .shadow = {0, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 63, .offset = {2, 2}, .shadow = {2, 2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 63, .offset = {3, 3}, .shadow = {3, 3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 61, .offset = {-9, -9}, .shadow = {-9, -9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 59, .offset = {-18, -18}, .shadow = {-18, -18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 60, .offset = {-17, -19}, .shadow = {-17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 61, .offset = {-18, -18}, .shadow = {-18, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 59, .offset = {-17, -19}, .shadow = {-17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 65, .offset = {-6, -6}, .shadow = {-6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 65, .offset = {-3, -3}, .shadow = {-3, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 42, .offset = {-2, 0}, .shadow = {-2, 0} },
	{ .frames = 6, .unkFlags = 0, .poseId = 70, .offset = {3, 0}, .shadow = {3, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 68, .offset = {-8, 0}, .shadow = {-8, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 66, .offset = {-18, 0}, .shadow = {-18, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 67, .offset = {-18, -1}, .shadow = {-18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 68, .offset = {-18, 0}, .shadow = {-18, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 66, .offset = {-18, -1}, .shadow = {-18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 72, .offset = {-6, 0}, .shadow = {-6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 72, .offset = {-3, 0}, .shadow = {-3, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_2_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 77, .offset = {2, -2}, .shadow = {2, -2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 77, .offset = {3, -3}, .shadow = {3, -3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 74, .offset = {-9, 9}, .shadow = {-9, 9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 73, .offset = {-18, 18}, .shadow = {-18, 18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 74, .offset = {-17, 19}, .shadow = {-17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 75, .offset = {-18, 18}, .shadow = {-18, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 75, .offset = {-17, 19}, .shadow = {-17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 79, .offset = {-6, 6}, .shadow = {-6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 79, .offset = {-3, 3}, .shadow = {-3, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 84, .offset = {0, -2}, .shadow = {0, -2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 84, .offset = {0, -3}, .shadow = {0, -3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 81, .offset = {0, 9}, .shadow = {0, 9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 80, .offset = {0, 18}, .shadow = {0, 18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 81, .offset = {1, 18}, .shadow = {1, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 82, .offset = {0, 18}, .shadow = {0, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 80, .offset = {1, 18}, .shadow = {1, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 86, .offset = {0, 6}, .shadow = {0, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 86, .offset = {0, 3}, .shadow = {0, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 91, .offset = {-2, -2}, .shadow = {-2, -2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 91, .offset = {-3, -3}, .shadow = {-3, -3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 88, .offset = {9, 9}, .shadow = {9, 9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 87, .offset = {18, 18}, .shadow = {18, 18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 88, .offset = {17, 19}, .shadow = {17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 89, .offset = {18, 18}, .shadow = {18, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 89, .offset = {17, 19}, .shadow = {17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 93, .offset = {6, 6}, .shadow = {6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 93, .offset = {3, 3}, .shadow = {3, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 98, .offset = {-2, 0}, .shadow = {-2, 0} },
	{ .frames = 6, .unkFlags = 0, .poseId = 98, .offset = {-3, 0}, .shadow = {-3, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 96, .offset = {8, 0}, .shadow = {8, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 94, .offset = {18, 0}, .shadow = {18, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 95, .offset = {18, -1}, .shadow = {18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 96, .offset = {18, 0}, .shadow = {18, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 94, .offset = {18, -1}, .shadow = {18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 100, .offset = {6, 0}, .shadow = {6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 100, .offset = {3, 0}, .shadow = {3, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 105, .offset = {-2, 2}, .shadow = {-2, 2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 105, .offset = {-3, 3}, .shadow = {-3, 3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 103, .offset = {9, -9}, .shadow = {9, -9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 101, .offset = {18, -18}, .shadow = {18, -18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 102, .offset = {17, -19}, .shadow = {17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 103, .offset = {18, -18}, .shadow = {18, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 101, .offset = {17, -19}, .shadow = {17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 107, .offset = {6, -6}, .shadow = {6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 107, .offset = {3, -3}, .shadow = {3, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 112, .offset = {0, 2}, .shadow = {0, 2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 112, .offset = {0, 3}, .shadow = {0, 3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 110, .offset = {0, -10}, .shadow = {0, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 108, .offset = {0, -18}, .shadow = {0, -18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 109, .offset = {1, -18}, .shadow = {1, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 110, .offset = {0, -18}, .shadow = {0, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 108, .offset = {1, -18}, .shadow = {1, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 114, .offset = {0, -6}, .shadow = {0, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 114, .offset = {0, -3}, .shadow = {0, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 119, .offset = {2, 2}, .shadow = {2, 2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 119, .offset = {3, 3}, .shadow = {3, 3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 117, .offset = {-9, -9}, .shadow = {-9, -9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 115, .offset = {-18, -18}, .shadow = {-18, -18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 116, .offset = {-17, -19}, .shadow = {-17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 117, .offset = {-18, -18}, .shadow = {-18, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 115, .offset = {-17, -19}, .shadow = {-17, -19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 121, .offset = {-6, -6}, .shadow = {-6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 121, .offset = {-3, -3}, .shadow = {-3, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 98, .offset = {-2, 0}, .shadow = {-2, 0} },
	{ .frames = 6, .unkFlags = 0, .poseId = 126, .offset = {3, 0}, .shadow = {3, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 124, .offset = {-8, 0}, .shadow = {-8, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 122, .offset = {-18, 0}, .shadow = {-18, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 123, .offset = {-18, -1}, .shadow = {-18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 124, .offset = {-18, 0}, .shadow = {-18, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 122, .offset = {-18, -1}, .shadow = {-18, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 128, .offset = {-6, 0}, .shadow = {-6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 128, .offset = {-3, 0}, .shadow = {-3, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_3_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 133, .offset = {2, -2}, .shadow = {2, -2} },
	{ .frames = 6, .unkFlags = 0, .poseId = 133, .offset = {3, -3}, .shadow = {3, -3} },
	{ .frames = 2, .unkFlags = 2, .poseId = 130, .offset = {-9, 9}, .shadow = {-9, 9} },
	{ .frames = 2, .unkFlags = 0, .poseId = 129, .offset = {-18, 18}, .shadow = {-18, 18} },
	{ .frames = 2, .unkFlags = 1, .poseId = 130, .offset = {-17, 19}, .shadow = {-17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 131, .offset = {-18, 18}, .shadow = {-18, 18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 131, .offset = {-17, 19}, .shadow = {-17, 19} },
	{ .frames = 2, .unkFlags = 0, .poseId = 135, .offset = {-6, 6}, .shadow = {-6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 135, .offset = {-3, 3}, .shadow = {-3, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 136, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 136, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 136, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 143, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 143, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 143, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 142, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 142, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 142, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 141, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 141, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 141, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 140, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 140, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 140, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 139, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 139, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 139, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 138, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 138, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 138, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_4_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 137, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 137, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 137, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 144, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 144, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 144, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 151, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 151, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 151, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 150, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 150, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 150, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 149, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 149, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 149, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 148, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 148, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 148, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 147, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 147, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 147, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 146, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 146, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 146, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_5_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 145, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 145, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 145, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_6_1[] = {
	{ .frames = 30, .unkFlags = 0, .poseId = 152, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 35, .unkFlags = 0, .poseId = 153, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 154, .offset = {0, -2}, .shadow = {0, -2} },
	{ .frames = 8, .unkFlags = 0, .poseId = 154, .offset = {0, -3}, .shadow = {0, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 155, .offset = {-2, -2}, .shadow = {-2, -2} },
	{ .frames = 8, .unkFlags = 0, .poseId = 155, .offset = {-3, -3}, .shadow = {-3, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 156, .offset = {-2, 0}, .shadow = {-2, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 156, .offset = {-3, 0}, .shadow = {-3, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 157, .offset = {-2, 2}, .shadow = {-2, 2} },
	{ .frames = 8, .unkFlags = 0, .poseId = 157, .offset = {-3, 3}, .shadow = {-3, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 158, .offset = {0, 2}, .shadow = {0, 2} },
	{ .frames = 8, .unkFlags = 0, .poseId = 158, .offset = {0, 3}, .shadow = {0, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 159, .offset = {2, 2}, .shadow = {2, 2} },
	{ .frames = 8, .unkFlags = 0, .poseId = 159, .offset = {3, 3}, .shadow = {3, 3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 160, .offset = {2, 0}, .shadow = {2, 0} },
	{ .frames = 8, .unkFlags = 0, .poseId = 160, .offset = {3, 0}, .shadow = {3, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_7_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 161, .offset = {2, -2}, .shadow = {2, -2} },
	{ .frames = 8, .unkFlags = 0, .poseId = 161, .offset = {3, -3}, .shadow = {3, -3} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_1[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 162, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 170, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_2[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 169, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 177, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_3[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 168, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 176, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_4[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 167, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 175, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_5[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 166, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 174, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_6[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 165, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 173, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_7[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 164, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 172, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_8_8[] = {
	{ .frames = 12, .unkFlags = 0, .poseId = 163, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 16, .unkFlags = 0, .poseId = 171, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 178, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 179, .offset = {6, 4}, .shadow = {6, 4} },
	{ .frames = 2, .unkFlags = 0, .poseId = 180, .offset = {8, 7}, .shadow = {8, 7} },
	{ .frames = 2, .unkFlags = 0, .poseId = 181, .offset = {7, 13}, .shadow = {7, 13} },
	{ .frames = 3, .unkFlags = 0, .poseId = 182, .offset = {0, 16}, .shadow = {0, 16} },
	{ .frames = 2, .unkFlags = 3, .poseId = 183, .offset = {-7, 13}, .shadow = {-7, 13} },
	{ .frames = 2, .unkFlags = 0, .poseId = 184, .offset = {-8, 9}, .shadow = {-8, 9} },
	{ .frames = 1, .unkFlags = 0, .poseId = 185, .offset = {-6, 4}, .shadow = {-6, 4} },
	{ .frames = 1, .unkFlags = 0, .poseId = 178, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 185, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 178, .offset = {6, 0}, .shadow = {6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 179, .offset = {17, 3}, .shadow = {17, 3} },
	{ .frames = 2, .unkFlags = 0, .poseId = 180, .offset = {19, 8}, .shadow = {19, 8} },
	{ .frames = 3, .unkFlags = 0, .poseId = 181, .offset = {17, 15}, .shadow = {17, 15} },
	{ .frames = 2, .unkFlags = 3, .poseId = 182, .offset = {9, 16}, .shadow = {9, 16} },
	{ .frames = 2, .unkFlags = 0, .poseId = 183, .offset = {2, 12}, .shadow = {2, 12} },
	{ .frames = 1, .unkFlags = 0, .poseId = 184, .offset = {0, 7}, .shadow = {0, 7} },
	{ .frames = 1, .unkFlags = 0, .poseId = 185, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 184, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 185, .offset = {3, -4}, .shadow = {3, -4} },
	{ .frames = 2, .unkFlags = 0, .poseId = 178, .offset = {11, -6}, .shadow = {11, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 179, .offset = {17, -4}, .shadow = {17, -4} },
	{ .frames = 3, .unkFlags = 0, .poseId = 180, .offset = {18, 1}, .shadow = {18, 1} },
	{ .frames = 2, .unkFlags = 3, .poseId = 181, .offset = {15, 5}, .shadow = {15, 5} },
	{ .frames = 2, .unkFlags = 0, .poseId = 182, .offset = {12, 7}, .shadow = {12, 7} },
	{ .frames = 1, .unkFlags = 0, .poseId = 183, .offset = {4, 5}, .shadow = {4, 5} },
	{ .frames = 1, .unkFlags = 0, .poseId = 184, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 183, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 184, .offset = {-1, -6}, .shadow = {-1, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 185, .offset = {4, -16}, .shadow = {4, -16} },
	{ .frames = 2, .unkFlags = 0, .poseId = 178, .offset = {9, -20}, .shadow = {9, -20} },
	{ .frames = 3, .unkFlags = 0, .poseId = 179, .offset = {16, -22}, .shadow = {16, -22} },
	{ .frames = 2, .unkFlags = 3, .poseId = 180, .offset = {18, -15}, .shadow = {18, -15} },
	{ .frames = 2, .unkFlags = 0, .poseId = 181, .offset = {16, -6}, .shadow = {16, -6} },
	{ .frames = 1, .unkFlags = 0, .poseId = 182, .offset = {7, -1}, .shadow = {7, -1} },
	{ .frames = 1, .unkFlags = 0, .poseId = 183, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 182, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 183, .offset = {-6, -4}, .shadow = {-6, -4} },
	{ .frames = 2, .unkFlags = 0, .poseId = 184, .offset = {-8, -10}, .shadow = {-8, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 185, .offset = {-7, -18}, .shadow = {-7, -18} },
	{ .frames = 3, .unkFlags = 0, .poseId = 178, .offset = {0, -22}, .shadow = {0, -22} },
	{ .frames = 2, .unkFlags = 3, .poseId = 179, .offset = {7, -18}, .shadow = {7, -18} },
	{ .frames = 2, .unkFlags = 0, .poseId = 180, .offset = {8, -8}, .shadow = {8, -8} },
	{ .frames = 1, .unkFlags = 0, .poseId = 181, .offset = {6, -4}, .shadow = {6, -4} },
	{ .frames = 1, .unkFlags = 0, .poseId = 182, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 181, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 180, .offset = {1, -6}, .shadow = {1, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 179, .offset = {-4, -16}, .shadow = {-4, -16} },
	{ .frames = 2, .unkFlags = 0, .poseId = 178, .offset = {-8, -20}, .shadow = {-8, -20} },
	{ .frames = 3, .unkFlags = 0, .poseId = 185, .offset = {-16, -22}, .shadow = {-16, -22} },
	{ .frames = 2, .unkFlags = 3, .poseId = 184, .offset = {-18, -15}, .shadow = {-18, -15} },
	{ .frames = 2, .unkFlags = 0, .poseId = 183, .offset = {-16, -6}, .shadow = {-16, -6} },
	{ .frames = 1, .unkFlags = 0, .poseId = 182, .offset = {-7, -1}, .shadow = {-7, -1} },
	{ .frames = 1, .unkFlags = 0, .poseId = 181, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 180, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 179, .offset = {-3, -4}, .shadow = {-3, -4} },
	{ .frames = 2, .unkFlags = 0, .poseId = 178, .offset = {-11, -6}, .shadow = {-11, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 185, .offset = {-17, -4}, .shadow = {-17, -4} },
	{ .frames = 3, .unkFlags = 0, .poseId = 184, .offset = {-18, 1}, .shadow = {-18, 1} },
	{ .frames = 2, .unkFlags = 3, .poseId = 183, .offset = {-15, 5}, .shadow = {-15, 5} },
	{ .frames = 2, .unkFlags = 0, .poseId = 182, .offset = {-10, 7}, .shadow = {-10, 7} },
	{ .frames = 1, .unkFlags = 0, .poseId = 181, .offset = {-4, 5}, .shadow = {-4, 5} },
	{ .frames = 1, .unkFlags = 0, .poseId = 180, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_9_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 179, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 1, .unkFlags = 0, .poseId = 178, .offset = {-6, 0}, .shadow = {-6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 185, .offset = {-17, 3}, .shadow = {-17, 3} },
	{ .frames = 2, .unkFlags = 0, .poseId = 184, .offset = {-19, 8}, .shadow = {-19, 8} },
	{ .frames = 3, .unkFlags = 0, .poseId = 183, .offset = {-17, 15}, .shadow = {-17, 15} },
	{ .frames = 2, .unkFlags = 3, .poseId = 182, .offset = {-9, 16}, .shadow = {-9, 16} },
	{ .frames = 2, .unkFlags = 0, .poseId = 181, .offset = {-2, 12}, .shadow = {-2, 12} },
	{ .frames = 1, .unkFlags = 0, .poseId = 180, .offset = {0, 7}, .shadow = {0, 7} },
	{ .frames = 1, .unkFlags = 0, .poseId = 179, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {6, 0}, .shadow = {6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {-6, 0}, .shadow = {-6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {10, 0}, .shadow = {10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {-10, 0}, .shadow = {-10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {12, 0}, .shadow = {12, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 186, .offset = {-12, 0}, .shadow = {-12, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 186, .offset = {13, 0}, .shadow = {13, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 186, .offset = {-13, 0}, .shadow = {-13, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {12, 0}, .shadow = {12, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 186, .offset = {-12, 0}, .shadow = {-12, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {10, 0}, .shadow = {10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {-10, 0}, .shadow = {-10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {6, 0}, .shadow = {6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {-6, 0}, .shadow = {-6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 186, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {6, -6}, .shadow = {6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {-6, 6}, .shadow = {-6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {10, -10}, .shadow = {10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {-10, 10}, .shadow = {-10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {12, -12}, .shadow = {12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 187, .offset = {-12, 12}, .shadow = {-12, 12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 187, .offset = {13, -13}, .shadow = {13, -13} },
	{ .frames = 3, .unkFlags = 0, .poseId = 187, .offset = {-13, 13}, .shadow = {-13, 13} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {12, -12}, .shadow = {12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 187, .offset = {-12, 12}, .shadow = {-12, 12} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {10, -10}, .shadow = {10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {-10, 10}, .shadow = {-10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {6, -6}, .shadow = {6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {-6, 6}, .shadow = {-6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 187, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, -6}, .shadow = {0, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, 6}, .shadow = {0, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, -10}, .shadow = {0, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, 10}, .shadow = {0, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, -12}, .shadow = {0, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 188, .offset = {0, 12}, .shadow = {0, 12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 188, .offset = {0, -13}, .shadow = {0, -13} },
	{ .frames = 3, .unkFlags = 0, .poseId = 188, .offset = {0, 13}, .shadow = {0, 13} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, -12}, .shadow = {0, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 188, .offset = {0, 12}, .shadow = {0, 12} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, -10}, .shadow = {0, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, 10}, .shadow = {0, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, -6}, .shadow = {0, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, 6}, .shadow = {0, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 188, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {-6, -6}, .shadow = {-6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {6, 6}, .shadow = {6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {-10, -10}, .shadow = {-10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {10, 10}, .shadow = {10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {-12, -12}, .shadow = {-12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 189, .offset = {12, 12}, .shadow = {12, 12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 189, .offset = {-13, -13}, .shadow = {-13, -13} },
	{ .frames = 3, .unkFlags = 0, .poseId = 189, .offset = {13, 13}, .shadow = {13, 13} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {-12, -12}, .shadow = {-12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 189, .offset = {12, 12}, .shadow = {12, 12} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {-10, -10}, .shadow = {-10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {10, 10}, .shadow = {10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {-6, -6}, .shadow = {-6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {6, 6}, .shadow = {6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 189, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {6, 0}, .shadow = {6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {-6, 0}, .shadow = {-6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {10, 0}, .shadow = {10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {-10, 0}, .shadow = {-10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {12, 0}, .shadow = {12, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 190, .offset = {-12, 0}, .shadow = {-12, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 190, .offset = {13, 0}, .shadow = {13, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 190, .offset = {-13, 0}, .shadow = {-13, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {12, 0}, .shadow = {12, 0} },
	{ .frames = 3, .unkFlags = 0, .poseId = 190, .offset = {-12, 0}, .shadow = {-12, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {10, 0}, .shadow = {10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {-10, 0}, .shadow = {-10, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {6, 0}, .shadow = {6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {-6, 0}, .shadow = {-6, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 190, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {6, -6}, .shadow = {6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {-6, 6}, .shadow = {-6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {10, -10}, .shadow = {10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {-10, 10}, .shadow = {-10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {12, -12}, .shadow = {12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 191, .offset = {-12, 12}, .shadow = {-12, 12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 191, .offset = {13, -13}, .shadow = {13, -13} },
	{ .frames = 3, .unkFlags = 0, .poseId = 191, .offset = {-13, 13}, .shadow = {-13, 13} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {12, -12}, .shadow = {12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 191, .offset = {-12, 12}, .shadow = {-12, 12} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {10, -10}, .shadow = {10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {-10, 10}, .shadow = {-10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {6, -6}, .shadow = {6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {-6, 6}, .shadow = {-6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 191, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, -6}, .shadow = {0, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, 6}, .shadow = {0, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, -10}, .shadow = {0, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, 10}, .shadow = {0, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, -12}, .shadow = {0, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 192, .offset = {0, 12}, .shadow = {0, 12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 192, .offset = {0, -13}, .shadow = {0, -13} },
	{ .frames = 3, .unkFlags = 0, .poseId = 192, .offset = {0, 13}, .shadow = {0, 13} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, -12}, .shadow = {0, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 192, .offset = {0, 12}, .shadow = {0, 12} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, -10}, .shadow = {0, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, 10}, .shadow = {0, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, -6}, .shadow = {0, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, 6}, .shadow = {0, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 192, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_10_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {-6, -6}, .shadow = {-6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {6, 6}, .shadow = {6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {-10, -10}, .shadow = {-10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {10, 10}, .shadow = {10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {-12, -12}, .shadow = {-12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 193, .offset = {12, 12}, .shadow = {12, 12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 193, .offset = {-13, -13}, .shadow = {-13, -13} },
	{ .frames = 3, .unkFlags = 0, .poseId = 193, .offset = {13, 13}, .shadow = {13, 13} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {-12, -12}, .shadow = {-12, -12} },
	{ .frames = 3, .unkFlags = 0, .poseId = 193, .offset = {12, 12}, .shadow = {12, 12} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {-10, -10}, .shadow = {-10, -10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {10, 10}, .shadow = {10, 10} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {-6, -6}, .shadow = {-6, -6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {6, 6}, .shadow = {6, 6} },
	{ .frames = 2, .unkFlags = 0, .poseId = 193, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 194, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 195, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 195, .offset = {-1, 0}, .shadow = {-1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 195, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 195, .offset = {-1, 0}, .shadow = {-1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 195, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 196, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 197, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 198, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 198, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 198, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 198, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 198, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 199, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 200, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 201, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 201, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 201, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 201, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 201, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 202, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 203, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 204, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 204, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 204, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 204, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 204, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 205, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 206, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 207, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 207, .offset = {-1, 0}, .shadow = {-1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 207, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 207, .offset = {-1, 0}, .shadow = {-1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 207, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 208, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 209, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 210, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 210, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 210, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 210, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 210, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 211, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 212, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 213, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 213, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 213, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 213, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 213, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 214, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_11_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 215, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 10, .unkFlags = 0, .poseId = 216, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 216, .offset = {-1, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 216, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 216, .offset = {-1, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 216, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 217, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 218, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 218, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 218, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 225, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 225, .offset = {1, -1}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 225, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 224, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 224, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 224, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 223, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 223, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 223, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 222, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 222, .offset = {1, 0}, .shadow = {1, 0} },
	{ .frames = 2, .unkFlags = 1, .poseId = 222, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 221, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 221, .offset = {1, -1}, .shadow = {1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 221, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 220, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 220, .offset = {0, -1}, .shadow = {0, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 220, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_12_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 2, .poseId = 219, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 219, .offset = {-1, -1}, .shadow = {-1, -1} },
	{ .frames = 2, .unkFlags = 1, .poseId = 219, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_13_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 228, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 229, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 230, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 231, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 232, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 233, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 226, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 2, .poseId = 227, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 234, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 235, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 236, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 237, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 238, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 239, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 240, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 241, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 242, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 243, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 244, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 245, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 246, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 247, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 248, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 249, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 250, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 251, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 252, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 253, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 254, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 255, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 256, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 257, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 258, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 259, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 260, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 261, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 262, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 263, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 264, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 265, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 266, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 267, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 268, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 269, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 270, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 271, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 272, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 273, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 274, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 275, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 276, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 277, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 278, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 279, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 280, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 281, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 282, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 283, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 284, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 285, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 286, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 287, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 288, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 289, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 290, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 291, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 292, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 293, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 294, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 295, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 296, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 297, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 298, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 299, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 300, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 301, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 302, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 303, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 304, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 305, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 306, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 307, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 308, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 309, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 310, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 311, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 312, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 313, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 314, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 315, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 316, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 317, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 318, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 319, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 320, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 321, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 322, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 323, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 324, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 325, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 326, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 327, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 328, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 329, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 330, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 331, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 332, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 333, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 334, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 335, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 336, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 337, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 338, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 339, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 340, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 341, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 342, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 343, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 344, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 345, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 346, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 347, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 348, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 349, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 350, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 351, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 352, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 353, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 354, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 355, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 356, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 357, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 358, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 359, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 360, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 361, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 362, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 363, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 364, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 365, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 366, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 367, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 368, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 369, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 370, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 371, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 372, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 373, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 374, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 375, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 376, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 377, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 378, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 379, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 380, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 381, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 382, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 383, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 384, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 385, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 386, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 387, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_14_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 388, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 389, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 390, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 391, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 392, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 393, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 394, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 395, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 396, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 397, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 398, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 399, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 400, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 401, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 402, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 403, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 404, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 405, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 406, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 407, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 408, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 409, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_1[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 419, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 419, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 419, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 419, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 419, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 418, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 417, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 416, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 415, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 414, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 413, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 412, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 411, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 410, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_2[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 441, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 441, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 441, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 441, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 441, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 440, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 439, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 438, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 437, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 436, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 435, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 434, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 433, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 432, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_3[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 451, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 451, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 451, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 451, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 451, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 450, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 449, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 448, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 447, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 446, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 445, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 444, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 443, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 442, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_4[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 461, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 461, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 461, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 461, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 461, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 460, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 459, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 458, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 457, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 456, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 455, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 454, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 453, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 452, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_5[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 471, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 471, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 471, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 471, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 471, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 470, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 469, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 468, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 467, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 466, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 465, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 464, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 463, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 462, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_6[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 481, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 481, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 481, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 481, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 481, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 480, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 479, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 478, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 477, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 476, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 475, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 474, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 473, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 472, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_7[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 491, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 491, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 491, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 491, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 491, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 490, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 489, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 488, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 487, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 486, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 485, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 484, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 483, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 482, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};
static const ax_anim sDugtrioAnims_15_8[] = {
	{ .frames = 2, .unkFlags = 0, .poseId = 501, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 501, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 501, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 501, .offset = {1, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 501, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 500, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 499, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 498, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 497, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 496, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 495, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 494, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 493, .offset = {0, 0}, .shadow = {0, 0} },
	{ .frames = 2, .unkFlags = 0, .poseId = 492, .offset = {0, 0}, .shadow = {0, 0} },
	AX_ANIM_TERMINATOR
};

static const u8 sDugtrioGfx1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_1.4bpp");
static const ax_sprite sDugtrioSprites1[] = {
	{sDugtrioGfx1, ARRAY_COUNT(sDugtrioGfx1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx2[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_2.4bpp");
static const ax_sprite sDugtrioSprites2[] = {
	{sDugtrioGfx2, ARRAY_COUNT(sDugtrioGfx2)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx3[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_3.4bpp");
static const ax_sprite sDugtrioSprites3[] = {
	{sDugtrioGfx3, ARRAY_COUNT(sDugtrioGfx3)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx4[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_4.4bpp");
static const ax_sprite sDugtrioSprites4[] = {
	{sDugtrioGfx4, ARRAY_COUNT(sDugtrioGfx4)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx5[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_5.4bpp");
static const ax_sprite sDugtrioSprites5[] = {
	{sDugtrioGfx5, ARRAY_COUNT(sDugtrioGfx5)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx6[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_6.4bpp");
static const ax_sprite sDugtrioSprites6[] = {
	{sDugtrioGfx6, ARRAY_COUNT(sDugtrioGfx6)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx7[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_7.4bpp");
static const ax_sprite sDugtrioSprites7[] = {
	{sDugtrioGfx7, ARRAY_COUNT(sDugtrioGfx7)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx8[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_8.4bpp");
static const ax_sprite sDugtrioSprites8[] = {
	{sDugtrioGfx8, ARRAY_COUNT(sDugtrioGfx8)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx9[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_9.4bpp");
static const ax_sprite sDugtrioSprites9[] = {
	{sDugtrioGfx9, ARRAY_COUNT(sDugtrioGfx9)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx10[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_10.4bpp");
static const u8 sDugtrioGfx10_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_10_1.4bpp");
static const ax_sprite sDugtrioSprites10[] = {
	{NULL, 32}, 
	{sDugtrioGfx10, ARRAY_COUNT(sDugtrioGfx10)}, 
	{NULL, 32}, 
	{sDugtrioGfx10_1, ARRAY_COUNT(sDugtrioGfx10_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx11[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_11.4bpp");
static const u8 sDugtrioGfx11_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_11_1.4bpp");
static const ax_sprite sDugtrioSprites11[] = {
	{NULL, 32}, 
	{sDugtrioGfx11, ARRAY_COUNT(sDugtrioGfx11)}, 
	{NULL, 32}, 
	{sDugtrioGfx11_1, ARRAY_COUNT(sDugtrioGfx11_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx12[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_12.4bpp");
static const u8 sDugtrioGfx12_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_12_1.4bpp");
static const ax_sprite sDugtrioSprites12[] = {
	{NULL, 32}, 
	{sDugtrioGfx12, ARRAY_COUNT(sDugtrioGfx12)}, 
	{NULL, 32}, 
	{sDugtrioGfx12_1, ARRAY_COUNT(sDugtrioGfx12_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx13[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_13.4bpp");
static const u8 sDugtrioGfx13_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_13_1.4bpp");
static const ax_sprite sDugtrioSprites13[] = {
	{NULL, 32}, 
	{sDugtrioGfx13, ARRAY_COUNT(sDugtrioGfx13)}, 
	{NULL, 32}, 
	{sDugtrioGfx13_1, ARRAY_COUNT(sDugtrioGfx13_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx14[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_14.4bpp");
static const u8 sDugtrioGfx14_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_14_1.4bpp");
static const ax_sprite sDugtrioSprites14[] = {
	{NULL, 32}, 
	{sDugtrioGfx14, ARRAY_COUNT(sDugtrioGfx14)}, 
	{NULL, 32}, 
	{sDugtrioGfx14_1, ARRAY_COUNT(sDugtrioGfx14_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx15[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_15.4bpp");
static const u8 sDugtrioGfx15_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_15_1.4bpp");
static const ax_sprite sDugtrioSprites15[] = {
	{sDugtrioGfx15, ARRAY_COUNT(sDugtrioGfx15)}, 
	{NULL, 32}, 
	{sDugtrioGfx15_1, ARRAY_COUNT(sDugtrioGfx15_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx16[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_16.4bpp");
static const ax_sprite sDugtrioSprites16[] = {
	{NULL, 64}, 
	{sDugtrioGfx16, ARRAY_COUNT(sDugtrioGfx16)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx17[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_17.4bpp");
static const u8 sDugtrioGfx17_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_17_1.4bpp");
static const ax_sprite sDugtrioSprites17[] = {
	{NULL, 64}, 
	{sDugtrioGfx17, ARRAY_COUNT(sDugtrioGfx17)}, 
	{NULL, 32}, 
	{sDugtrioGfx17_1, ARRAY_COUNT(sDugtrioGfx17_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx18[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_18.4bpp");
static const u8 sDugtrioGfx18_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_18_1.4bpp");
static const ax_sprite sDugtrioSprites18[] = {
	{NULL, 64}, 
	{sDugtrioGfx18, ARRAY_COUNT(sDugtrioGfx18)}, 
	{NULL, 32}, 
	{sDugtrioGfx18_1, ARRAY_COUNT(sDugtrioGfx18_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx19[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_19.4bpp");
static const u8 sDugtrioGfx19_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_19_1.4bpp");
static const ax_sprite sDugtrioSprites19[] = {
	{NULL, 32}, 
	{sDugtrioGfx19, ARRAY_COUNT(sDugtrioGfx19)}, 
	{NULL, 32}, 
	{sDugtrioGfx19_1, ARRAY_COUNT(sDugtrioGfx19_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx20[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_20.4bpp");
static const u8 sDugtrioGfx20_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_20_1.4bpp");
static const ax_sprite sDugtrioSprites20[] = {
	{NULL, 32}, 
	{sDugtrioGfx20, ARRAY_COUNT(sDugtrioGfx20)}, 
	{NULL, 32}, 
	{sDugtrioGfx20_1, ARRAY_COUNT(sDugtrioGfx20_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx21[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_21.4bpp");
static const u8 sDugtrioGfx21_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_21_1.4bpp");
static const u8 sDugtrioGfx21_2[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_21_2.4bpp");
static const ax_sprite sDugtrioSprites21[] = {
	{NULL, 32}, 
	{sDugtrioGfx21, ARRAY_COUNT(sDugtrioGfx21)}, 
	{NULL, 32}, 
	{sDugtrioGfx21_1, ARRAY_COUNT(sDugtrioGfx21_1)}, 
	{NULL, 32}, 
	{sDugtrioGfx21_2, ARRAY_COUNT(sDugtrioGfx21_2)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx22[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_22.4bpp");
static const u8 sDugtrioGfx22_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_22_1.4bpp");
static const ax_sprite sDugtrioSprites22[] = {
	{NULL, 32}, 
	{sDugtrioGfx22, ARRAY_COUNT(sDugtrioGfx22)}, 
	{NULL, 64}, 
	{sDugtrioGfx22_1, ARRAY_COUNT(sDugtrioGfx22_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx23[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_23.4bpp");
static const u8 sDugtrioGfx23_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_23_1.4bpp");
static const ax_sprite sDugtrioSprites23[] = {
	{sDugtrioGfx23, ARRAY_COUNT(sDugtrioGfx23)}, 
	{NULL, 64}, 
	{sDugtrioGfx23_1, ARRAY_COUNT(sDugtrioGfx23_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx24[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_24.4bpp");
static const u8 sDugtrioGfx24_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_24_1.4bpp");
static const ax_sprite sDugtrioSprites24[] = {
	{sDugtrioGfx24, ARRAY_COUNT(sDugtrioGfx24)}, 
	{NULL, 64}, 
	{sDugtrioGfx24_1, ARRAY_COUNT(sDugtrioGfx24_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx25[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_25.4bpp");
static const u8 sDugtrioGfx25_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_25_1.4bpp");
static const ax_sprite sDugtrioSprites25[] = {
	{NULL, 32}, 
	{sDugtrioGfx25, ARRAY_COUNT(sDugtrioGfx25)}, 
	{NULL, 32}, 
	{sDugtrioGfx25_1, ARRAY_COUNT(sDugtrioGfx25_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx26[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_26.4bpp");
static const u8 sDugtrioGfx26_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_26_1.4bpp");
static const ax_sprite sDugtrioSprites26[] = {
	{NULL, 64}, 
	{sDugtrioGfx26, ARRAY_COUNT(sDugtrioGfx26)}, 
	{NULL, 32}, 
	{sDugtrioGfx26_1, ARRAY_COUNT(sDugtrioGfx26_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx27[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_27.4bpp");
static const ax_sprite sDugtrioSprites27[] = {
	{NULL, 64}, 
	{sDugtrioGfx27, ARRAY_COUNT(sDugtrioGfx27)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx28[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_28.4bpp");
static const u8 sDugtrioGfx28_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_28_1.4bpp");
static const ax_sprite sDugtrioSprites28[] = {
	{sDugtrioGfx28, ARRAY_COUNT(sDugtrioGfx28)}, 
	{NULL, 64}, 
	{sDugtrioGfx28_1, ARRAY_COUNT(sDugtrioGfx28_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx29[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_29.4bpp");
static const u8 sDugtrioGfx29_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_29_1.4bpp");
static const ax_sprite sDugtrioSprites29[] = {
	{NULL, 32}, 
	{sDugtrioGfx29, ARRAY_COUNT(sDugtrioGfx29)}, 
	{NULL, 32}, 
	{sDugtrioGfx29_1, ARRAY_COUNT(sDugtrioGfx29_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx30[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_30.4bpp");
static const u8 sDugtrioGfx30_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_30_1.4bpp");
static const ax_sprite sDugtrioSprites30[] = {
	{NULL, 32}, 
	{sDugtrioGfx30, ARRAY_COUNT(sDugtrioGfx30)}, 
	{NULL, 32}, 
	{sDugtrioGfx30_1, ARRAY_COUNT(sDugtrioGfx30_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx31[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_31.4bpp");
static const u8 sDugtrioGfx31_1[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_31_1.4bpp");
static const ax_sprite sDugtrioSprites31[] = {
	{sDugtrioGfx31, ARRAY_COUNT(sDugtrioGfx31)}, 
	{NULL, 32}, 
	{sDugtrioGfx31_1, ARRAY_COUNT(sDugtrioGfx31_1)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx32[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_32.4bpp");
static const ax_sprite sDugtrioSprites32[] = {
	{NULL, 32}, 
	{sDugtrioGfx32, ARRAY_COUNT(sDugtrioGfx32)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx33[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_33.4bpp");
static const ax_sprite sDugtrioSprites33[] = {
	{NULL, 32}, 
	{sDugtrioGfx33, ARRAY_COUNT(sDugtrioGfx33)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx34[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_34.4bpp");
static const ax_sprite sDugtrioSprites34[] = {
	{sDugtrioGfx34, ARRAY_COUNT(sDugtrioGfx34)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx35[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_35.4bpp");
static const ax_sprite sDugtrioSprites35[] = {
	{sDugtrioGfx35, ARRAY_COUNT(sDugtrioGfx35)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx36[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_36.4bpp");
static const ax_sprite sDugtrioSprites36[] = {
	{sDugtrioGfx36, ARRAY_COUNT(sDugtrioGfx36)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx37[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_37.4bpp");
static const ax_sprite sDugtrioSprites37[] = {
	{sDugtrioGfx37, ARRAY_COUNT(sDugtrioGfx37)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx38[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_38.4bpp");
static const ax_sprite sDugtrioSprites38[] = {
	{sDugtrioGfx38, ARRAY_COUNT(sDugtrioGfx38)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx39[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_39.4bpp");
static const ax_sprite sDugtrioSprites39[] = {
	{sDugtrioGfx39, ARRAY_COUNT(sDugtrioGfx39)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx40[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_40.4bpp");
static const ax_sprite sDugtrioSprites40[] = {
	{sDugtrioGfx40, ARRAY_COUNT(sDugtrioGfx40)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx41[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_41.4bpp");
static const ax_sprite sDugtrioSprites41[] = {
	{sDugtrioGfx41, ARRAY_COUNT(sDugtrioGfx41)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx42[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_42.4bpp");
static const ax_sprite sDugtrioSprites42[] = {
	{sDugtrioGfx42, ARRAY_COUNT(sDugtrioGfx42)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx43[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_43.4bpp");
static const ax_sprite sDugtrioSprites43[] = {
	{sDugtrioGfx43, ARRAY_COUNT(sDugtrioGfx43)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx44[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_44.4bpp");
static const ax_sprite sDugtrioSprites44[] = {
	{sDugtrioGfx44, ARRAY_COUNT(sDugtrioGfx44)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx45[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_45.4bpp");
static const ax_sprite sDugtrioSprites45[] = {
	{sDugtrioGfx45, ARRAY_COUNT(sDugtrioGfx45)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx46[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_46.4bpp");
static const ax_sprite sDugtrioSprites46[] = {
	{sDugtrioGfx46, ARRAY_COUNT(sDugtrioGfx46)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx47[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_47.4bpp");
static const ax_sprite sDugtrioSprites47[] = {
	{sDugtrioGfx47, ARRAY_COUNT(sDugtrioGfx47)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx48[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_48.4bpp");
static const ax_sprite sDugtrioSprites48[] = {
	{sDugtrioGfx48, ARRAY_COUNT(sDugtrioGfx48)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx49[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_49.4bpp");
static const ax_sprite sDugtrioSprites49[] = {
	{sDugtrioGfx49, ARRAY_COUNT(sDugtrioGfx49)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx50[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_50.4bpp");
static const ax_sprite sDugtrioSprites50[] = {
	{sDugtrioGfx50, ARRAY_COUNT(sDugtrioGfx50)}, 
	{NULL, 0}
};
static const u8 sDugtrioGfx51[] = INCBIN_U8("graphics/ax/mon/dugtrio/sprite_51.4bpp");
static const ax_sprite sDugtrioSprites51[] = {
	{sDugtrioGfx51, ARRAY_COUNT(sDugtrioGfx51)}, 
	{NULL, 0}
};

static const ax_pose *const sAxPosesDugtrio[] = {
	sDugtrioPose1,
	sDugtrioPose2,
	sDugtrioPose3,
	sDugtrioPose4,
	sDugtrioPose5,
	sDugtrioPose6,
	sDugtrioPose7,
	sDugtrioPose8,
	sDugtrioPose9,
	sDugtrioPose10,
	sDugtrioPose11,
	sDugtrioPose12,
	sDugtrioPose13,
	sDugtrioPose14,
	sDugtrioPose15,
	sDugtrioPose16,
	sDugtrioPose17,
	sDugtrioPose18,
	sDugtrioPose19,
	sDugtrioPose20,
	sDugtrioPose21,
	sDugtrioPose22,
	sDugtrioPose23,
	sDugtrioPose24,
	sDugtrioPose25,
	sDugtrioPose26,
	sDugtrioPose27,
	sDugtrioPose28,
	sDugtrioPose29,
	sDugtrioPose30,
	sDugtrioPose31,
	sDugtrioPose32,
	sDugtrioPose33,
	sDugtrioPose34,
	sDugtrioPose35,
	sDugtrioPose36,
	sDugtrioPose37,
	sDugtrioPose38,
	sDugtrioPose39,
	sDugtrioPose40,
	sDugtrioPose41,
	sDugtrioPose42,
	sDugtrioPose43,
	sDugtrioPose44,
	sDugtrioPose45,
	sDugtrioPose46,
	sDugtrioPose47,
	sDugtrioPose48,
	sDugtrioPose49,
	sDugtrioPose50,
	sDugtrioPose51,
	sDugtrioPose52,
	sDugtrioPose53,
	sDugtrioPose54,
	sDugtrioPose55,
	sDugtrioPose56,
	sDugtrioPose57,
	sDugtrioPose58,
	sDugtrioPose59,
	sDugtrioPose60,
	sDugtrioPose61,
	sDugtrioPose62,
	sDugtrioPose63,
	sDugtrioPose64,
	sDugtrioPose65,
	sDugtrioPose66,
	sDugtrioPose67,
	sDugtrioPose68,
	sDugtrioPose69,
	sDugtrioPose70,
	sDugtrioPose71,
	sDugtrioPose72,
	sDugtrioPose73,
	sDugtrioPose74,
	sDugtrioPose75,
	sDugtrioPose76,
	sDugtrioPose77,
	sDugtrioPose78,
	sDugtrioPose79,
	sDugtrioPose80,
	sDugtrioPose81,
	sDugtrioPose82,
	sDugtrioPose83,
	sDugtrioPose84,
	sDugtrioPose85,
	sDugtrioPose86,
	sDugtrioPose87,
	sDugtrioPose88,
	sDugtrioPose89,
	sDugtrioPose90,
	sDugtrioPose91,
	sDugtrioPose92,
	sDugtrioPose93,
	sDugtrioPose94,
	sDugtrioPose95,
	sDugtrioPose96,
	sDugtrioPose97,
	sDugtrioPose98,
	sDugtrioPose99,
	sDugtrioPose100,
	sDugtrioPose101,
	sDugtrioPose102,
	sDugtrioPose103,
	sDugtrioPose104,
	sDugtrioPose105,
	sDugtrioPose106,
	sDugtrioPose107,
	sDugtrioPose108,
	sDugtrioPose109,
	sDugtrioPose110,
	sDugtrioPose111,
	sDugtrioPose112,
	sDugtrioPose113,
	sDugtrioPose114,
	sDugtrioPose115,
	sDugtrioPose116,
	sDugtrioPose117,
	sDugtrioPose118,
	sDugtrioPose119,
	sDugtrioPose120,
	sDugtrioPose121,
	sDugtrioPose122,
	sDugtrioPose123,
	sDugtrioPose124,
	sDugtrioPose125,
	sDugtrioPose126,
	sDugtrioPose127,
	sDugtrioPose128,
	sDugtrioPose129,
	sDugtrioPose130,
	sDugtrioPose131,
	sDugtrioPose132,
	sDugtrioPose133,
	sDugtrioPose134,
	sDugtrioPose135,
	sDugtrioPose136,
	sDugtrioPose137,
	sDugtrioPose138,
	sDugtrioPose139,
	sDugtrioPose140,
	sDugtrioPose141,
	sDugtrioPose142,
	sDugtrioPose143,
	sDugtrioPose144,
	sDugtrioPose145,
	sDugtrioPose146,
	sDugtrioPose147,
	sDugtrioPose148,
	sDugtrioPose149,
	sDugtrioPose150,
	sDugtrioPose151,
	sDugtrioPose152,
	sDugtrioPose153,
	sDugtrioPose154,
	sDugtrioPose155,
	sDugtrioPose156,
	sDugtrioPose157,
	sDugtrioPose158,
	sDugtrioPose159,
	sDugtrioPose160,
	sDugtrioPose161,
	sDugtrioPose162,
	sDugtrioPose163,
	sDugtrioPose164,
	sDugtrioPose165,
	sDugtrioPose166,
	sDugtrioPose167,
	sDugtrioPose168,
	sDugtrioPose169,
	sDugtrioPose170,
	sDugtrioPose171,
	sDugtrioPose172,
	sDugtrioPose173,
	sDugtrioPose174,
	sDugtrioPose175,
	sDugtrioPose176,
	sDugtrioPose177,
	sDugtrioPose178,
	sDugtrioPose179,
	sDugtrioPose180,
	sDugtrioPose181,
	sDugtrioPose182,
	sDugtrioPose183,
	sDugtrioPose184,
	sDugtrioPose185,
	sDugtrioPose186,
	sDugtrioPose187,
	sDugtrioPose188,
	sDugtrioPose189,
	sDugtrioPose190,
	sDugtrioPose191,
	sDugtrioPose192,
	sDugtrioPose193,
	sDugtrioPose194,
	sDugtrioPose195,
	sDugtrioPose196,
	sDugtrioPose197,
	sDugtrioPose198,
	sDugtrioPose199,
	sDugtrioPose200,
	sDugtrioPose201,
	sDugtrioPose202,
	sDugtrioPose203,
	sDugtrioPose204,
	sDugtrioPose205,
	sDugtrioPose206,
	sDugtrioPose207,
	sDugtrioPose208,
	sDugtrioPose209,
	sDugtrioPose210,
	sDugtrioPose211,
	sDugtrioPose212,
	sDugtrioPose213,
	sDugtrioPose214,
	sDugtrioPose215,
	sDugtrioPose216,
	sDugtrioPose217,
	sDugtrioPose218,
	sDugtrioPose219,
	sDugtrioPose220,
	sDugtrioPose221,
	sDugtrioPose222,
	sDugtrioPose223,
	sDugtrioPose224,
	sDugtrioPose225,
	sDugtrioPose226,
	sDugtrioPose227,
	sDugtrioPose228,
	sDugtrioPose229,
	sDugtrioPose230,
	sDugtrioPose231,
	sDugtrioPose232,
	sDugtrioPose233,
	sDugtrioPose234,
	sDugtrioPose235,
	sDugtrioPose236,
	sDugtrioPose237,
	sDugtrioPose238,
	sDugtrioPose239,
	sDugtrioPose240,
	sDugtrioPose241,
	sDugtrioPose242,
	sDugtrioPose243,
	sDugtrioPose244,
	sDugtrioPose245,
	sDugtrioPose246,
	sDugtrioPose247,
	sDugtrioPose248,
	sDugtrioPose249,
	sDugtrioPose250,
	sDugtrioPose251,
	sDugtrioPose252,
	sDugtrioPose253,
	sDugtrioPose254,
	sDugtrioPose255,
	sDugtrioPose256,
	sDugtrioPose257,
	sDugtrioPose258,
	sDugtrioPose259,
	sDugtrioPose260,
	sDugtrioPose261,
	sDugtrioPose262,
	sDugtrioPose263,
	sDugtrioPose264,
	sDugtrioPose265,
	sDugtrioPose266,
	sDugtrioPose267,
	sDugtrioPose268,
	sDugtrioPose269,
	sDugtrioPose270,
	sDugtrioPose271,
	sDugtrioPose272,
	sDugtrioPose273,
	sDugtrioPose274,
	sDugtrioPose275,
	sDugtrioPose276,
	sDugtrioPose277,
	sDugtrioPose278,
	sDugtrioPose279,
	sDugtrioPose280,
	sDugtrioPose281,
	sDugtrioPose282,
	sDugtrioPose283,
	sDugtrioPose284,
	sDugtrioPose285,
	sDugtrioPose286,
	sDugtrioPose287,
	sDugtrioPose288,
	sDugtrioPose289,
	sDugtrioPose290,
	sDugtrioPose291,
	sDugtrioPose292,
	sDugtrioPose293,
	sDugtrioPose294,
	sDugtrioPose295,
	sDugtrioPose296,
	sDugtrioPose297,
	sDugtrioPose298,
	sDugtrioPose299,
	sDugtrioPose300,
	sDugtrioPose301,
	sDugtrioPose302,
	sDugtrioPose303,
	sDugtrioPose304,
	sDugtrioPose305,
	sDugtrioPose306,
	sDugtrioPose307,
	sDugtrioPose308,
	sDugtrioPose309,
	sDugtrioPose310,
	sDugtrioPose311,
	sDugtrioPose312,
	sDugtrioPose313,
	sDugtrioPose314,
	sDugtrioPose315,
	sDugtrioPose316,
	sDugtrioPose317,
	sDugtrioPose318,
	sDugtrioPose319,
	sDugtrioPose320,
	sDugtrioPose321,
	sDugtrioPose322,
	sDugtrioPose323,
	sDugtrioPose324,
	sDugtrioPose325,
	sDugtrioPose326,
	sDugtrioPose327,
	sDugtrioPose328,
	sDugtrioPose329,
	sDugtrioPose330,
	sDugtrioPose331,
	sDugtrioPose332,
	sDugtrioPose333,
	sDugtrioPose334,
	sDugtrioPose335,
	sDugtrioPose336,
	sDugtrioPose337,
	sDugtrioPose338,
	sDugtrioPose339,
	sDugtrioPose340,
	sDugtrioPose341,
	sDugtrioPose342,
	sDugtrioPose343,
	sDugtrioPose344,
	sDugtrioPose345,
	sDugtrioPose346,
	sDugtrioPose347,
	sDugtrioPose348,
	sDugtrioPose349,
	sDugtrioPose350,
	sDugtrioPose351,
	sDugtrioPose352,
	sDugtrioPose353,
	sDugtrioPose354,
	sDugtrioPose355,
	sDugtrioPose356,
	sDugtrioPose357,
	sDugtrioPose358,
	sDugtrioPose359,
	sDugtrioPose360,
	sDugtrioPose361,
	sDugtrioPose362,
	sDugtrioPose363,
	sDugtrioPose364,
	sDugtrioPose365,
	sDugtrioPose366,
	sDugtrioPose367,
	sDugtrioPose368,
	sDugtrioPose369,
	sDugtrioPose370,
	sDugtrioPose371,
	sDugtrioPose372,
	sDugtrioPose373,
	sDugtrioPose374,
	sDugtrioPose375,
	sDugtrioPose376,
	sDugtrioPose377,
	sDugtrioPose378,
	sDugtrioPose379,
	sDugtrioPose380,
	sDugtrioPose381,
	sDugtrioPose382,
	sDugtrioPose383,
	sDugtrioPose384,
	sDugtrioPose385,
	sDugtrioPose386,
	sDugtrioPose387,
	sDugtrioPose388,
	sDugtrioPose389,
	sDugtrioPose390,
	sDugtrioPose391,
	sDugtrioPose392,
	sDugtrioPose393,
	sDugtrioPose394,
	sDugtrioPose395,
	sDugtrioPose396,
	sDugtrioPose397,
	sDugtrioPose398,
	sDugtrioPose399,
	sDugtrioPose400,
	sDugtrioPose401,
	sDugtrioPose402,
	sDugtrioPose403,
	sDugtrioPose404,
	sDugtrioPose405,
	sDugtrioPose406,
	sDugtrioPose407,
	sDugtrioPose408,
	sDugtrioPose409,
	sDugtrioPose410,
	sDugtrioPose411,
	sDugtrioPose412,
	sDugtrioPose413,
	sDugtrioPose414,
	sDugtrioPose415,
	sDugtrioPose416,
	sDugtrioPose417,
	sDugtrioPose418,
	sDugtrioPose419,
	sDugtrioPose420,
	sDugtrioPose421,
	sDugtrioPose422,
	sDugtrioPose423,
	sDugtrioPose424,
	sDugtrioPose425,
	sDugtrioPose426,
	sDugtrioPose427,
	sDugtrioPose428,
	sDugtrioPose429,
	sDugtrioPose430,
	sDugtrioPose431,
	sDugtrioPose432,
	sDugtrioPose433,
	sDugtrioPose434,
	sDugtrioPose435,
	sDugtrioPose436,
	sDugtrioPose437,
	sDugtrioPose438,
	sDugtrioPose439,
	sDugtrioPose440,
	sDugtrioPose441,
	sDugtrioPose442,
	sDugtrioPose443,
	sDugtrioPose444,
	sDugtrioPose445,
	sDugtrioPose446,
	sDugtrioPose447,
	sDugtrioPose448,
	sDugtrioPose449,
	sDugtrioPose450,
	sDugtrioPose451,
	sDugtrioPose452,
	sDugtrioPose453,
	sDugtrioPose454,
	sDugtrioPose455,
	sDugtrioPose456,
	sDugtrioPose457,
	sDugtrioPose458,
	sDugtrioPose459,
	sDugtrioPose460,
	sDugtrioPose461,
	sDugtrioPose462,
	sDugtrioPose463,
	sDugtrioPose464,
	sDugtrioPose465,
	sDugtrioPose466,
	sDugtrioPose467,
	sDugtrioPose468,
	sDugtrioPose469,
	sDugtrioPose470,
	sDugtrioPose471,
	sDugtrioPose472,
	sDugtrioPose473,
	sDugtrioPose474,
	sDugtrioPose475,
	sDugtrioPose476,
	sDugtrioPose477,
	sDugtrioPose478,
	sDugtrioPose479,
	sDugtrioPose480,
	sDugtrioPose481,
	sDugtrioPose482,
	sDugtrioPose483,
	sDugtrioPose484,
	sDugtrioPose485,
	sDugtrioPose486,
	sDugtrioPose487,
	sDugtrioPose488,
	sDugtrioPose489,
	sDugtrioPose490,
	sDugtrioPose491,
	sDugtrioPose492,
	sDugtrioPose493,
	sDugtrioPose494,
	sDugtrioPose495,
	sDugtrioPose496,
	sDugtrioPose497,
	sDugtrioPose498,
	sDugtrioPose499,
	sDugtrioPose500,
	sDugtrioPose501,
	sDugtrioPose502,
};

static const struct PositionSets sAxPositionsDugtrio[] = {
	[0] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[1] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[2] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[3] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[4] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[5] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[6] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[7] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[8] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[9] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[10] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[11] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[12] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[13] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[14] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[15] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[16] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[17] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[18] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[19] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[20] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[21] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[22] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[23] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[24] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[25] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[26] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[27] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[28] = { .set = { {-1, -9}, {-10, -8}, {7, -4}, {0, -11} } },
	[29] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[30] = { .set = { {-1, -9}, {-10, -8}, {7, -4}, {0, -11} } },
	[31] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[32] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[33] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[34] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[35] = { .set = { {-1, -11}, {-10, -3}, {3, -11}, {-4, -8} } },
	[36] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[37] = { .set = { {-1, -11}, {-10, -3}, {3, -11}, {-4, -8} } },
	[38] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[39] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[40] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[41] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[42] = { .set = { {4, -8}, {-2, -1}, {-1, -11}, {-4, -6} } },
	[43] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[44] = { .set = { {4, -8}, {-2, -1}, {-1, -11}, {-4, -6} } },
	[45] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[46] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[47] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[48] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[49] = { .set = { {3, -12}, {3, -2}, {-4, -10}, {-3, -5} } },
	[50] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[51] = { .set = { {3, -12}, {3, -2}, {-4, -10}, {-3, -5} } },
	[52] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[53] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[54] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[55] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[56] = { .set = { {0, -10}, {8, -6}, {-9, -6}, {-2, -6} } },
	[57] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[58] = { .set = { {0, -10}, {8, -6}, {-9, -6}, {-2, -6} } },
	[59] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[60] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[61] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[62] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[63] = { .set = { {1, -11}, {8, -10}, {-6, -4}, {0, -7} } },
	[64] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[65] = { .set = { {1, -11}, {8, -10}, {-6, -4}, {0, -7} } },
	[66] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[67] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[68] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[69] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[70] = { .set = { {-4, -13}, {0, -11}, {0, -2}, {2, -7} } },
	[71] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[72] = { .set = { {-4, -13}, {0, -11}, {0, -2}, {2, -7} } },
	[73] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[74] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[75] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[76] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[77] = { .set = { {-1, -11}, {-7, -14}, {2, -1}, {0, -10} } },
	[78] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[79] = { .set = { {-1, -11}, {-7, -14}, {2, -1}, {0, -10} } },
	[80] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[81] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[82] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[83] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[84] = { .set = { {-1, -9}, {-10, -8}, {7, -4}, {0, -11} } },
	[85] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[86] = { .set = { {-1, -9}, {-10, -8}, {7, -4}, {0, -11} } },
	[87] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[88] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[89] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[90] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[91] = { .set = { {-1, -11}, {-10, -3}, {3, -11}, {-4, -8} } },
	[92] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[93] = { .set = { {-1, -11}, {-10, -3}, {3, -11}, {-4, -8} } },
	[94] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[95] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[96] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[97] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[98] = { .set = { {4, -8}, {-2, -1}, {-1, -11}, {-4, -6} } },
	[99] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[100] = { .set = { {4, -8}, {-2, -1}, {-1, -11}, {-4, -6} } },
	[101] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[102] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[103] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[104] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[105] = { .set = { {3, -12}, {3, -2}, {-4, -10}, {-3, -5} } },
	[106] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[107] = { .set = { {3, -12}, {3, -2}, {-4, -10}, {-3, -5} } },
	[108] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[109] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[110] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[111] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[112] = { .set = { {0, -10}, {8, -6}, {-9, -6}, {-2, -6} } },
	[113] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[114] = { .set = { {0, -10}, {8, -6}, {-9, -6}, {-2, -6} } },
	[115] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[116] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[117] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[118] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[119] = { .set = { {1, -11}, {8, -10}, {-6, -4}, {0, -7} } },
	[120] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[121] = { .set = { {1, -11}, {8, -10}, {-6, -4}, {0, -7} } },
	[122] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[123] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[124] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[125] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[126] = { .set = { {-4, -13}, {0, -11}, {0, -2}, {2, -7} } },
	[127] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[128] = { .set = { {-4, -13}, {0, -11}, {0, -2}, {2, -7} } },
	[129] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[130] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[131] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[132] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[133] = { .set = { {-1, -11}, {-7, -14}, {2, -1}, {0, -10} } },
	[134] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[135] = { .set = { {-1, -11}, {-7, -14}, {2, -1}, {0, -10} } },
	[136] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[137] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[138] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[139] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[140] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[141] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[142] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[143] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[144] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[145] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[146] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[147] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[148] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[149] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[150] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[151] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[152] = { .set = { {-2, -4}, {-10, -5}, {7, -5}, {0, -6} } },
	[153] = { .set = { {-2, -3}, {-10, -5}, {7, -5}, {1, -5} } },
	[154] = { .set = { {-1, -8}, {-11, -6}, {8, -6}, {1, -8} } },
	[155] = { .set = { {4, -6}, {8, -11}, {-8, -7}, {-1, -8} } },
	[156] = { .set = { {5, -11}, {0, -14}, {3, -3}, {-1, -9} } },
	[157] = { .set = { {0, -11}, {-9, -12}, {9, -8}, {-1, -7} } },
	[158] = { .set = { {-1, -10}, {10, -8}, {-10, -10}, {-1, -6} } },
	[159] = { .set = { {-1, -11}, {8, -12}, {-10, -8}, {0, -7} } },
	[160] = { .set = { {-6, -11}, {-1, -14}, {-4, -3}, {0, -9} } },
	[161] = { .set = { {-5, -6}, {-9, -11}, {7, -7}, {0, -8} } },
	[162] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[163] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[164] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[165] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[166] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[167] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[168] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[169] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[170] = { .set = { {-2, -2}, {-10, -3}, {8, -3}, {0, -7} } },
	[171] = { .set = { {-7, -3}, {-7, -11}, {3, 0}, {-1, -7} } },
	[172] = { .set = { {-6, -11}, {1, -11}, {4, -2}, {-1, -6} } },
	[173] = { .set = { {-2, -9}, {7, -11}, {-8, -4}, {0, -7} } },
	[174] = { .set = { {0, -9}, {9, -7}, {-9, -7}, {-1, -5} } },
	[175] = { .set = { {4, -7}, {2, -2}, {-3, -12}, {-1, -6} } },
	[176] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {-1, -5} } },
	[177] = { .set = { {3, -3}, {-8, -4}, {6, -8}, {-1, -7} } },
	[178] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[179] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[180] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[181] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[182] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[183] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[184] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[185] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[186] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[187] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[188] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[189] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[190] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[191] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[192] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[193] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[194] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[195] = { .set = { {-1, -9}, {-10, -8}, {7, -4}, {0, -11} } },
	[196] = { .set = { {-2, 3}, {-10, -6}, {7, 0}, {-1, -5} } },
	[197] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[198] = { .set = { {-1, -11}, {-10, -3}, {3, -11}, {-4, -8} } },
	[199] = { .set = { {2, 0}, {-8, -3}, {8, -6}, {0, -6} } },
	[200] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[201] = { .set = { {4, -8}, {-2, -1}, {-1, -11}, {-4, -6} } },
	[202] = { .set = { {7, -3}, {1, 1}, {4, -10}, {0, -5} } },
	[203] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[204] = { .set = { {3, -12}, {3, -2}, {-4, -10}, {-3, -5} } },
	[205] = { .set = { {6, -6}, {9, -1}, {-1, -9}, {1, -4} } },
	[206] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[207] = { .set = { {0, -10}, {8, -6}, {-9, -6}, {-2, -6} } },
	[208] = { .set = { {-1, -6}, {9, -5}, {-9, -5}, {-1, -3} } },
	[209] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[210] = { .set = { {1, -11}, {8, -10}, {-6, -4}, {0, -7} } },
	[211] = { .set = { {-3, -9}, {7, -10}, {-8, -4}, {0, -7} } },
	[212] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[213] = { .set = { {-4, -13}, {0, -11}, {0, -2}, {2, -7} } },
	[214] = { .set = { {-10, -7}, {-8, -12}, {-1, -1}, {-2, -7} } },
	[215] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[216] = { .set = { {-1, -11}, {-7, -14}, {2, -1}, {0, -10} } },
	[217] = { .set = { {-8, 2}, {-3, -11}, {1, -1}, {-1, -7} } },
	[218] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[219] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[220] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[221] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[222] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[223] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[224] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[225] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[226] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[227] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[228] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[229] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[230] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[231] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[232] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[233] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[234] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[235] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[236] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[237] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[238] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[239] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[240] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[241] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[242] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[243] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[244] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[245] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[246] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[247] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[248] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[249] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[250] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[251] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[252] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[253] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[254] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[255] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[256] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[257] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[258] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[259] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[260] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[261] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[262] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[263] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[264] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[265] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[266] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[267] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[268] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[269] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[270] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[271] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[272] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[273] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[274] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[275] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[276] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[277] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[278] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[279] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[280] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[281] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[282] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[283] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[284] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[285] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[286] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[287] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[288] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[289] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[290] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[291] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[292] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[293] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[294] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[295] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[296] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[297] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[298] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[299] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[300] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[301] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[302] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[303] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[304] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[305] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[306] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[307] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[308] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[309] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[310] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[311] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[312] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[313] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[314] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[315] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[316] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[317] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[318] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[319] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[320] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[321] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[322] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[323] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[324] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[325] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[326] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[327] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[328] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[329] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[330] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[331] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[332] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[333] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[334] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[335] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[336] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[337] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[338] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[339] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[340] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[341] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[342] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[343] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[344] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[345] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[346] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[347] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[348] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[349] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[350] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[351] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[352] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[353] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[354] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[355] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[356] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[357] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[358] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[359] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[360] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[361] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[362] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[363] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[364] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[365] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[366] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[367] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[368] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[369] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[370] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[371] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[372] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[373] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[374] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[375] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[376] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[377] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[378] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[379] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[380] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[381] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[382] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[383] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[384] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[385] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[386] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[387] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[388] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[389] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[390] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[391] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[392] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[393] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[394] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[395] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[396] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[397] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[398] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[399] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[400] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[401] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[402] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[403] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[404] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[405] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[406] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[407] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[408] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[409] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
	[410] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[411] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[412] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[413] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[414] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[415] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[416] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[417] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[418] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[419] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[420] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[421] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[422] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[423] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[424] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[425] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[426] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[427] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[428] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[429] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[430] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[431] = { .set = { {-2, -2}, {-11, -2}, {8, -2}, {-1, -8} } },
	[432] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[433] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[434] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[435] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[436] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[437] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[438] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[439] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[440] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[441] = { .set = { {3, -3}, {-8, -2}, {4, -8}, {-2, -7} } },
	[442] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[443] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[444] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[445] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[446] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[447] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[448] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[449] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[450] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[451] = { .set = { {6, -5}, {-3, -1}, {3, -9}, {0, -4} } },
	[452] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[453] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[454] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[455] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[456] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[457] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[458] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[459] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[460] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[461] = { .set = { {3, -10}, {2, -2}, {-3, -11}, {-1, -7} } },
	[462] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[463] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[464] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[465] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[466] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[467] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[468] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[469] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[470] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[471] = { .set = { {0, -9}, {9, -6}, {-9, -6}, {-2, -6} } },
	[472] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[473] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[474] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[475] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[476] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[477] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[478] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[479] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[480] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[481] = { .set = { {-1, -9}, {7, -10}, {-8, -4}, {1, -7} } },
	[482] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[483] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[484] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[485] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[486] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[487] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[488] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[489] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[490] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[491] = { .set = { {-8, -10}, {1, -10}, {4, -2}, {-1, -7} } },
	[492] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[493] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[494] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[495] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[496] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[497] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[498] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[499] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[500] = { .set = { {0, 0}, {0, 0}, {0, 0}, {0, 0} } },
	[501] = { .set = { {-7, -4}, {-7, -10}, {3, -2}, {-1, -6} } },
};

static const ax_anim *const sDugtrioAnimTable1[] = {
	sDugtrioAnims_1_1,
	sDugtrioAnims_1_2,
	sDugtrioAnims_1_3,
	sDugtrioAnims_1_4,
	sDugtrioAnims_1_5,
	sDugtrioAnims_1_6,
	sDugtrioAnims_1_7,
	sDugtrioAnims_1_8,
};

static const ax_anim *const sDugtrioAnimTable2[] = {
	sDugtrioAnims_2_1,
	sDugtrioAnims_2_2,
	sDugtrioAnims_2_3,
	sDugtrioAnims_2_4,
	sDugtrioAnims_2_5,
	sDugtrioAnims_2_6,
	sDugtrioAnims_2_7,
	sDugtrioAnims_2_8,
};

static const ax_anim *const sDugtrioAnimTable3[] = {
	sDugtrioAnims_3_1,
	sDugtrioAnims_3_2,
	sDugtrioAnims_3_3,
	sDugtrioAnims_3_4,
	sDugtrioAnims_3_5,
	sDugtrioAnims_3_6,
	sDugtrioAnims_3_7,
	sDugtrioAnims_3_8,
};

static const ax_anim *const sDugtrioAnimTable4[] = {
	sDugtrioAnims_4_1,
	sDugtrioAnims_4_2,
	sDugtrioAnims_4_3,
	sDugtrioAnims_4_4,
	sDugtrioAnims_4_5,
	sDugtrioAnims_4_6,
	sDugtrioAnims_4_7,
	sDugtrioAnims_4_8,
};

static const ax_anim *const sDugtrioAnimTable5[] = {
	sDugtrioAnims_5_1,
	sDugtrioAnims_5_2,
	sDugtrioAnims_5_3,
	sDugtrioAnims_5_4,
	sDugtrioAnims_5_5,
	sDugtrioAnims_5_6,
	sDugtrioAnims_5_7,
	sDugtrioAnims_5_8,
};

static const ax_anim *const sDugtrioAnimTable6[] = {
	sDugtrioAnims_6_1,
	sDugtrioAnims_6_1,
	sDugtrioAnims_6_1,
	sDugtrioAnims_6_1,
	sDugtrioAnims_6_1,
	sDugtrioAnims_6_1,
	sDugtrioAnims_6_1,
	sDugtrioAnims_6_1,
};

static const ax_anim *const sDugtrioAnimTable7[] = {
	sDugtrioAnims_7_1,
	sDugtrioAnims_7_2,
	sDugtrioAnims_7_3,
	sDugtrioAnims_7_4,
	sDugtrioAnims_7_5,
	sDugtrioAnims_7_6,
	sDugtrioAnims_7_7,
	sDugtrioAnims_7_8,
};

static const ax_anim *const sDugtrioAnimTable8[] = {
	sDugtrioAnims_8_1,
	sDugtrioAnims_8_2,
	sDugtrioAnims_8_3,
	sDugtrioAnims_8_4,
	sDugtrioAnims_8_5,
	sDugtrioAnims_8_6,
	sDugtrioAnims_8_7,
	sDugtrioAnims_8_8,
};

static const ax_anim *const sDugtrioAnimTable9[] = {
	sDugtrioAnims_9_1,
	sDugtrioAnims_9_2,
	sDugtrioAnims_9_3,
	sDugtrioAnims_9_4,
	sDugtrioAnims_9_5,
	sDugtrioAnims_9_6,
	sDugtrioAnims_9_7,
	sDugtrioAnims_9_8,
};

static const ax_anim *const sDugtrioAnimTable10[] = {
	sDugtrioAnims_10_1,
	sDugtrioAnims_10_2,
	sDugtrioAnims_10_3,
	sDugtrioAnims_10_4,
	sDugtrioAnims_10_5,
	sDugtrioAnims_10_6,
	sDugtrioAnims_10_7,
	sDugtrioAnims_10_8,
};

static const ax_anim *const sDugtrioAnimTable11[] = {
	sDugtrioAnims_11_1,
	sDugtrioAnims_11_2,
	sDugtrioAnims_11_3,
	sDugtrioAnims_11_4,
	sDugtrioAnims_11_5,
	sDugtrioAnims_11_6,
	sDugtrioAnims_11_7,
	sDugtrioAnims_11_8,
};

static const ax_anim *const sDugtrioAnimTable12[] = {
	sDugtrioAnims_12_1,
	sDugtrioAnims_12_2,
	sDugtrioAnims_12_3,
	sDugtrioAnims_12_4,
	sDugtrioAnims_12_5,
	sDugtrioAnims_12_6,
	sDugtrioAnims_12_7,
	sDugtrioAnims_12_8,
};

static const ax_anim *const sDugtrioAnimTable13[] = {
	sDugtrioAnims_13_1,
	sDugtrioAnims_13_2,
	sDugtrioAnims_13_3,
	sDugtrioAnims_13_4,
	sDugtrioAnims_13_5,
	sDugtrioAnims_13_6,
	sDugtrioAnims_13_7,
	sDugtrioAnims_13_8,
};

static const ax_anim *const sDugtrioAnimTable14[] = {
	sDugtrioAnims_14_1,
	sDugtrioAnims_14_2,
	sDugtrioAnims_14_3,
	sDugtrioAnims_14_4,
	sDugtrioAnims_14_5,
	sDugtrioAnims_14_6,
	sDugtrioAnims_14_7,
	sDugtrioAnims_14_8,
};

static const ax_anim *const sDugtrioAnimTable15[] = {
	sDugtrioAnims_15_1,
	sDugtrioAnims_15_2,
	sDugtrioAnims_15_3,
	sDugtrioAnims_15_4,
	sDugtrioAnims_15_5,
	sDugtrioAnims_15_6,
	sDugtrioAnims_15_7,
	sDugtrioAnims_15_8,
};

static const ax_anim *const *const sAxAnimationsDugtrio[] = {
	sDugtrioAnimTable1,
	sDugtrioAnimTable2,
	sDugtrioAnimTable3,
	sDugtrioAnimTable4,
	sDugtrioAnimTable5,
	sDugtrioAnimTable6,
	sDugtrioAnimTable7,
	sDugtrioAnimTable8,
	sDugtrioAnimTable9,
	sDugtrioAnimTable10,
	sDugtrioAnimTable11,
	sDugtrioAnimTable12,
	sDugtrioAnimTable13,
	sDugtrioAnimTable14,
	sDugtrioAnimTable15,
};

static const ax_sprite *const sAxSpritesDugtrio[] = {
	sDugtrioSprites1,
	sDugtrioSprites2,
	sDugtrioSprites3,
	sDugtrioSprites4,
	sDugtrioSprites5,
	sDugtrioSprites6,
	sDugtrioSprites7,
	sDugtrioSprites8,
	sDugtrioSprites9,
	sDugtrioSprites10,
	sDugtrioSprites11,
	sDugtrioSprites12,
	sDugtrioSprites13,
	sDugtrioSprites14,
	sDugtrioSprites15,
	sDugtrioSprites16,
	sDugtrioSprites17,
	sDugtrioSprites18,
	sDugtrioSprites19,
	sDugtrioSprites20,
	sDugtrioSprites21,
	sDugtrioSprites22,
	sDugtrioSprites23,
	sDugtrioSprites24,
	sDugtrioSprites25,
	sDugtrioSprites26,
	sDugtrioSprites27,
	sDugtrioSprites28,
	sDugtrioSprites29,
	sDugtrioSprites30,
	sDugtrioSprites31,
	sDugtrioSprites32,
	sDugtrioSprites33,
	sDugtrioSprites34,
	sDugtrioSprites35,
	sDugtrioSprites36,
	sDugtrioSprites37,
	sDugtrioSprites38,
	sDugtrioSprites39,
	sDugtrioSprites40,
	sDugtrioSprites41,
	sDugtrioSprites42,
	sDugtrioSprites43,
	sDugtrioSprites44,
	sDugtrioSprites45,
	sDugtrioSprites46,
	sDugtrioSprites47,
	sDugtrioSprites48,
	sDugtrioSprites49,
	sDugtrioSprites50,
	sDugtrioSprites51,
};

static const axmain sAxMainDugtrio = {
	.poses = sAxPosesDugtrio,
	.animations = sAxAnimationsDugtrio,
	.animCount = ARRAY_COUNT(sAxAnimationsDugtrio),
	.spriteData = sAxSpritesDugtrio,
	.positions = sAxPositionsDugtrio,
};
